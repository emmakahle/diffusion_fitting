% Code by Christo Buizert
% extra documentation by Emma Kahle 6/30/16

%clear; close all; format compact;

% select fitoption
fitoption = 'exp'; % Choose what kind of fit to use in code ('exp', 'logn')

% Set window length and number of spectra generated for this window length
winlen = 20;
Nspec = 14;

% Emma Kahle SP 500 yr spectra in depth world (N=14 spectra generated):
%EK_all = dlmread('SP_500yr_age_spectra.txt','\t'); % read in SP depth spectra
EK_all = dlmread('SP_20m_win_5m_step_depth_spectra.txt','\t'); % read in SP depth spectra, N = 200
%EK_age = 500*(1:Nspec)+250; % create age vector from year 1 to year 6500 centered in middle of age window (500yr spectra with a moving window of only 100yr)
EK_age = [1:5:534, 584:5:714, 1078:5:1405];
EK_F = EK_all(:,1); % assign frequency vector that corresponds to all spectra
EK_all(:,1:2:end) = []; % remove frequency columns from spectra data

% % Emma Kahle SPC 200 yr spectra (N=34 spectra generated):
% EK_all = dlmread('SP_200yr_spectra_nooverlap.txt','\t'); % read in WDC spectra
% EK_age = 200*(1:N); % create age vector from year 1 to year 6800 (200yr spectra with a moving window of only 100yr)
% EK_F = EK_all(:,1); % assign frequency vector that corresponds to all spectra
% EK_all(:,1:2:end) = []; % remove frequency columns from spectra data

% % tentative noise correction;
% noise = mean(EK_all(500:501,:)); % spectra data flat at end, so sample this noise value
% noise = max(noise,2E-2);    % some threshold noise value if noise in data is small


% normalize each SP spectrum:
for n = 1:Nspec
% EK_all(:,n) = (EK_all(:,n)-noise(1))./mean(EK_all(8:10,n)); % subtract noise and divide by mean of white noise in spectrum
EK_all(:,n) = (EK_all(:,n))./mean(EK_all(8:10,n)); % subtract noise and divide by mean of white noise in spectrum

% where = find(EK_all(:,n)<1E-6,1,'first'); % find smallest data
% EK_all(where:end,n) = NaN;  % replace smallest data with NaN
end

% Plot all of the spectra
figure;
hold on
for ii = 1:Nspec
loglog(EK_F(8:end),EK_all(8:end,ii))
end
set(gca, 'YScale', 'log','XScale','log')
xlabel('Frequency (cycles/meter)')
ylabel('Power density (per mil^2 * meter)')
title(['All South Pole Spectra, ' num2str(winlen) ' meter windows'])

%% Different sigma distributions:

% this is the first approach, where we simply assume sigma (isotopic
% diffusion length) has a distibution function associated with it

x = -5:0.0001:5;    % all possible distances a molecule could move
N = length(x);      % number of possibile distances
L = x(end)-x(1);    % range over which molecules can move
freq = [0:(N-1)]/L; % define frequency vector to later use in plotting


% % different fits, with the first one being the case used in the literature.
% % I called it 'delta', because the distribution of sigma values is a delta
% % function, i.e. just a single value.
% pdf_s1 = H2O_pdf_sigma_EK(x,'delta',0.31);    % pdf output from function
% S_s1 = abs(fft(pdf_s1)).^2*(L/(N-1)).^2;
% 
% pdf_s2 = H2O_pdf_sigma_EK(x,'square',0.31, 0.15);
% S_s2 = abs(fft(pdf_s2)).^2*(L/(N-1)).^2;
% 
% pdf_s3 = H2O_pdf_sigma_EK(x,'triangle',0.33,0.22);
% S_s3 = abs(fft(pdf_s3)).^2*(L/(N-1)).^2;
% 
% % note that the case below is NOT Gaussian diffusion; it assumes that the
% % sigma values of the molecules are distributed with a normal distribution
% pdf_s4 = H2O_pdf_sigma_EK(x,'normal',0.34,0.09);
% S_s4 = abs(fft(pdf_s4)).^2*(L/(N-1)).^2;
% 
% figure;
% loglog(EK_F(8:end),EK_all(8:end,2),freq,[S_s1;S_s2;S_s3;S_s4]);
% legend('SPICEcore spectrum','delta','square','triangle','normal')
% xlabel('Frequency')
% ylabel('Power')
% title('Fits assuming different distributions of sigma')
% ylim([1E-6 2])
% xlim([1E-1 5])

%% Using firn properties distributions:

% % this is the second approach, where we assume that the water isotopes
% % diffuse in a realistic firn profile, where they are 'released' into the
% % open pores at different times.
% 
% pdf_HL1 = H2O_pdf_HL_EK(x,6.9232e-04,'exp',...
%     273-50,0.08,1/160.2506);
% S_HL1 = 1.098883703511030*abs(fft(pdf_HL1)).^2*(L/(N-1)).^2;
% 
% %[6.923198507370730e-04,1.602505735421647e+02,1.098883703511030]
% 
% pdf_HL2 = H2O_pdf_HL_EK(x,0.0005,'logn',273-50,0.08,1/39.8518,1.6);
% S_HL2 = abs(fft(pdf_HL2)).^2*(L/(N-1)).^2;
% 
% %0.0005   39.8518    0.9407
% 
% figure;
% loglog(EK_F(8:end),EK_all(8:end,1),freq,[S_HL1;S_HL2]);
% legend('SPICEcore spectrum','exp','logn')
% xlabel('Frequency')
% ylabel('Power')
% title('Fits for water isotopes released into firn at different times')
% ylim([1E-7 2])
% xlim([1E-1 10])

% figure;
% loglog(EK_F(8:end),EK_all(8:end,2),freq,S_HL1);
% legend('SPICEcore spectrum','exp','logn')
% xlabel('Frequency')
% ylabel('Power')
% title('Fits for water isotopes released into firn at different times')
% ylim([1E-7 2])
% xlim([1E-1 10])


%% automated fitting routine for lognormal

switch fitoption
    case 'logn'

NRounds = 10;           % number of tuning rounds we're doing.
%Tune_vec =  [1.2E-4 10 1]; % initial values for parameters of interest for D0, k0 and S0
Tune_vec = [0.001355176167587,58.213366330047090,1.091632271712542];    % values from latest tuning run
Stepsizes = [0.1E-4 1 0.1]; % initial stepsize for parameters of interest

% monitor the progress in RMS fit
RMSProgress = zeros(1,NRounds+1);

% initial fit:
pdf = H2O_pdf_HL_EK(x,Tune_vec(1),'logn',273.15-50,0.08,1/Tune_vec(2),1.5);
S = Tune_vec(3)*abs(fft(pdf)).^2*(L/(N-1)).^2;

minval = Calc_RMSD(freq(2:800),S(2:800),EK_F(8:end),EK_all(8:end,spec));

disp(['Progress is 0 %, RMSD = ',num2str(minval)])
for teller1 = 1:NRounds;
    
    RMSProgress(teller1) = minval;
    for tuningvar = 1:length(Tune_vec)
        Tune_vectemp = Tune_vec;
        RMS123(2) = minval;
        
        % Apply perturbations to the variables, and see whether this
        % improves the fit
        for teller2 = [1 3];
            % temporary Tune_vec with perturbations:
            Tune_vectemp(tuningvar) = Tune_vec(tuningvar)+ (teller2-2)*Stepsizes(tuningvar);
            
            pdf = H2O_pdf_HL_EK(x,Tune_vectemp(1),'logn',273.15-50,0.08,1/Tune_vectemp(2),1.5);
            S = Tune_vectemp(3)*abs(fft(pdf)).^2*(L/(N-1)).^2;

            RMS123(teller2) = Calc_RMSD(freq(2:800),S(2:800),EK_F(8:end),EK_all(8:end,spec));
            
        end
        
        % Determine the best fit and change the parameters for next round
        [minval,minpos] = min(RMS123);
        [maxval,maxpos] = max(RMS123);
        if minval==maxval
            minpos = 2;
        end
        if maxpos==2
            %            warning('Gradient non-unique. Danger of getting stuck in local minimum.')
            minpos = 2;
        end
        
        if minpos == 2
            % no new minimum found; stepsize is reduced
            Stepsizes(tuningvar) = (2/3)* Stepsizes(tuningvar);
        else
            % new minimum found; update Tune_vec
            Tune_vec(tuningvar) = Tune_vec(tuningvar) + (minpos-2)*Stepsizes(tuningvar);
        end
        
    end
    
    if rem(teller1,2) ==0
        disp(['Progress is ',num2str(100*teller1/NRounds),' %, RMSD = ',num2str(minval)])
    end
    
end
RMSProgress(teller1+1) = minval;
D0 = Tune_vec(1);
k0 = Tune_vec(2);
S0 = Tune_vec(3);

pdf = H2O_pdf_HL_EK(x,D0,'logn',273.15-50,0.08,1/k0,1.5);
S = S0*abs(fft(pdf)).^2*(L/(N-1)).^2;

figure;
loglog(freq(2:800),S(2:800),EK_F(8:end),EK_all(8:end,spec))


%% automated fitting routine for exponential

    case 'exp'

NRounds = 20;           % number of tuning rounds we're doing.
%Tune_vec =  [0.0001   22.8793    2.4601]; % initial values for parameters of interest for D0, k0 and S0
% For 14 spectra, 500 yr windows
%Tune_mat = [0.000865091951992754,37.2090790608651,2.76526839291661;0.000939494478699721,39.0137117528651,1.52299607210502;0.000832936422014141,38.7546766144318,2.33913182376889;0.000817566342622160,39.0840626010361,2.62093168490116;0.000680858947384463,39.8674842542981,2.25492638568221;0.000765263624699128,39.0631290669812,2.38698160075887;0.000551983552864788,39.7989745064826,2.38698160075887;0.000777228804691763,39.3946824144347,2.38698160075887;0.000578714989293386,38.9734628713152,2.38698160075887;0.000613134616628974,39.0700277176829,2.38698160075887;0.000597489331476434,38.6960489423891,2.38698160075887;0.000737131650048867,37.8506493589922,2.38698160075887;0.000723765931834568,38.3708952564672,2.35729404337209;0.000596535946912450,38.6414451259745,2.35272672685104];
%Tune_mat = [6.923198507370730e-04,1.602505735421647e+02,1.098883703511030];
% For 200 spectra
%Tune_mat = [0.000982891667442618,35.0054914735878,3.21320529075063;0.00116032618896444,34.5355132082343,3.09770270307002;0.00110709521658938,35.5109549459066,5.45086953312892;0.00109159106749309,36.5862972079416,3.84124024220102;0.00112882206841097,36.4457424449743,2.97889574446334;0.00111855018687395,36.8608313588701,2.78988803816208;0.00101348699784230,37.6730209021032,2.12799079400265;0.00119185096745668,37.4750319026107,2.95771852169647;0.00118363620600876,37.6368872004296,2.12498638398034;0.00124270209913139,37.4555775717589,1.88234797256684;0.00126116724067159,37.3967764612169,1.86733972141573;0.00126920596401417,37.2401917122879,1.71903727580088;0.00121736739718996,37.3179593081055,1.91493261472809;0.00112550173446436,37.9697883928171,1.64897660846224;0.00139641083473954,37.1898807344701,2.19463872753513;0.00143169788064815,36.6747461438470,2.53139838455989;0.00140613597321068,36.5693467492372,2.46528693788314;0.00119138963334950,37.0180210319235,2.24449855309537;0.00116598114850813,37.1542640069302,2.71646397875463;0.00110014224458793,37.3489149924645,2.56922258956728;0.00103384038320944,37.6318049095231,2.17773730082717;0.00117542227215160,37.0887620633818,2.17625077645288;0.000899437844174013,39.0944355001015,2.48355864317749;0.000976215142587882,38.1392646056679,2.20256539400527;0.000872563839320533,38.3363486065611,1.83766568422251;0.000858299787243487,38.0758521102076,2.68492206409871;0.000851611325983451,37.4140347637327,1.77834576529071;0.000766587865418123,38.2316441874393,1.58666454525073;0.00107708709366955,37.0047988866176,2.33388842787815;0.00126546777630609,37.1142146924502,3.11709086970877;0.00124937969826260,37.0692962111254,2.65089173691071;0.00112323323655263,37.5530486592310,2.64640582031789;0.000997382129255363,38.2178987742350,2.75161146420422;0.000910186867155540,38.3063498725913,2.58775619634306;0.000866255847000577,38.2999379691215,2.47411241845808;0.00100791829872090,37.4332045587811,3.24484959028588;0.000809705089753551,38.2966878234163,2.80475558173178;0.000774667533283414,39.0459397763666,3.32990526734894;0.000689817776593056,40.1241812061941,2.49400633790436;0.000759898290093593,40.1818205620179,2.56750349589511;0.000809952295359812,38.8992727149277,2.26139517107471;0.000868249401752664,37.5675886526790,1.55180558351936;0.00119509937262496,35.9290670478713,2.94777030752237;0.00110676381423268,36.5746484908633,4.15834202563306;0.000938389765862998,37.8426146542361,4.24124859591514;0.000921770499510729,37.9849647362811,3.95860144608924;0.000983519092650718,37.7005042704388,3.54086572587029;0.00107682500203961,37.4451238302990,3.03932118313961;0.000760648530007346,39.3972875332874,3.09112192308446;0.000790491197845087,39.2866320362051,3.82464583074748;0.000704072825967973,39.9036656145849,2.05484431671347;0.000787660029281917,39.8522376900626,2.41487996263410;0.000602276566192678,39.6468585135181,2.22257625217809;0.000668141887032841,38.9385176880212,3.46702444536949;0.000710808076757873,39.0985126389850,3.55041063406433;0.000712241221112646,38.9803288033425,2.64560088095909;0.000957455983512373,37.5883203252866,4.49956961878699;0.00107422969330842,37.2053873126503,4.98138833849856;0.00111460942245274,37.1182777196898,3.22144989858810;0.00100261242332896,37.7657747600438,3.09957120775819;0.00102585940023809,37.9958144005131,2.74208864828521;0.000957003450514706,38.7988544534617,2.98856031333955;0.000867761966705906,39.4857101504512,3.47390564312670;0.00100346025823969,37.9103895689936,3.91524908482578;0.000814896248332973,36.6521129284627,2.56941012998412;0.000823181307250498,36.3768895780530,3.30820270840142;0.000766996122309739,36.9136516257619,3.47168526494737;0.000888575603946144,36.3115461444485,4.69114518618038;0.000866301698712129,36.8636418287839,4.70878555418890;0.000708996556018023,37.5473531715347,2.61108675385519;0.000940535869053702,36.8333334191879,4.19701423948180;0.00103026866591471,36.5894062165253,6.02112692083254;0.00100580920487059,36.8374801218602,6.42153545214282;0.000995009792575144,36.6014933884065,4.59301764238908;0.00101439357578231,36.5354497810258,3.72747178583011;0.000869528563531831,36.3621955098909,3.81031370542720;0.000696249349316962,37.0089723011432,3.09225471380099;0.000788747457024863,36.7619310612488,5.12206455864549;0.000950214405146021,36.2116425226759,3.26388170193033;0.000891179570549979,36.7609949731601,3.22973429265380;0.000750590026598695,37.6348420840189,2.73932592914570;0.000834099972192478,36.6500829656384,5.01398043767377;0.000828788537088202,36.2889983937513,3.88767046855904;0.000657422266512189,36.7720639830984,2.81186831861131;0.000807815984147617,36.0838723407409,3.68901194588083;0.000897571995990670,36.0153772401893,4.15722140601605;0.000978574508374343,36.3053289304245,3.69600777361057;0.00106686351478596,36.0838807366227,3.12597551855343;0.000973118419953059,36.3486898967140,4.04339250369385;0.000895384140138412,36.9565544012857,3.54610013152919;0.000744696597718516,38.5937647042568,2.52232892876248;0.000832061858593807,38.6527481162346,3.40720536422981;0.000748608965284152,38.9135255792532,2.70898410589742;0.000816254499849467,37.7537913944150,2.43112426612008;0.000719919353608773,38.2709558854238,2.29142212713486;0.000826141668391192,37.7719622110512,2.61042663388926;0.000826785491567635,37.5783737575161,2.31220252525157;0.000787418261371400,37.2099134033454,1.92928743631833;0.000991363905110426,36.2444304238473,4.13382859056790;0.00108346267787390,35.8640415160561,4.59991524093093;0.000942449704533605,35.9349742303344,3.61664738645251;0.000828438897049960,36.4321434425560,3.52603148407601;0.000824256702507454,37.4968024656034,2.83091889856142;0.000778451992098231,38.1595482060001,4.60200274023196;0.000726854469321170,38.5125956118051,4.03146395702702;0.000909375347210615,37.2166344325751,4.63680546074579;0.000773317875978736,39.5387719378680,2.66332432149710;0.000853515819236808,35.7993286943279,3.63667065372994;0.000770520322101240,36.3404765796000,2.60864810121079;0.000813322626929416,36.6500869561034,2.98762832597633;0.000813119888411691,36.4085669141099,3.28692331757396;0.000711352770593486,36.9477192167080,3.09431798533504;0.000944585037255290,35.7605178629653,7.61424190706650;0.000178781040536150,40.3286009311965,2.78182568191433;0.000318657557569782,45.9846168461163,4.56735471210456;0.000318003072530874,59.2596214195925,3.98263129031360;0.000351747688189240,57.1155687982555,3.58443803420011;0.000368307317902833,50.6041986333871,4.07364860612729;0.000843808434179148,36.5442807801527,2.44935568960061;0.00102075525009569,35.9745922988601,3.20563001767312;0.000864852396296020,36.4455627787623,2.21797088795684;0.000869291163461477,36.8897571615740,2.34381907973897;0.000764121931405160,37.6016956698135,2.86770852999467;0.000780776325566683,36.9565217602503,4.60178290931847;0.000793138635952838,36.6500830339162,4.14719588049460;0.000721306268413187,37.2050218706211,3.06611792800663;0.00104980429080741,35.4105780270182,4.42720452505544;0.000568707069423129,44.2848379787163,7.08464512314421;0.000468138700916216,49.1166604768805,6.76598071198037;0.000463973802633926,51.1603200469866,5.45876504740050;0.000867387290901197,19.6196235635849,-0.146577954992966;0.00218308700460946,41.7145648174534,1.55343093379867;0.00189638684981083,42.4735141073038,1.39374434582370;0.00245376062745972,40.6828537016275,2.30541280949136;0.000597994119796931,36.0898683682141,4.81413913036489;0.000581584899007265,39.0946059996022,5.78832248337800;0.000564088660929807,39.2246637045000,4.49385306258287;0.000737092885582054,34.6526871157947,5.28087710405013;0.000740244912906478,34.8269363062058,6.42378124456914;0.000692113980227749,35.0237763078847,3.62089154247080;0.000893382711681475,33.7546837810158,7.06196395307321;0.000945475660298458,33.5869976858925,7.56085071690672;0.000631886629776509,36.0619305939703,5.85499153350147;0.000609614846570106,38.9105993092345,6.52317106801238;0.000489821937112847,54.4529277077030,5.62877409408256;0.000430954944290504,56.0457772923826,6.59610735507591;0.000491962070921996,42.8918257857034,7.35047519647317;0.000765177603594396,33.4530009904102,6.30757164988248;0.000610236529335712,34.6391739701529,5.70615845513530;0.000574225792141814,35.1090975692518,7.41929751165022;0.000446640606323365,37.3564950087818,8.30764071437642;0.000552004401786042,36.2525045587567,7.15081615624104;0.000585701707428328,34.8874632056690,6.50824442586463;0.000589510488805704,34.4245933085473,4.40025006782746;0.000724212692917141,33.6408384474128,8.31570202524835;0.000103025178343316,83.0827071561149,2.27224073582749;3.71807677614739e-05,83.4889650867175,1.47762885354266;0.000128386356557957,82.7721224883385,3.37882704236637;0.000610654167947167,33.7934767478615,8.08987701990124;0.000669337324212710,33.5405040920967,6.87213235126551;0.000510288495517424,36.2052175089446,5.45990973389126;0.000571364057539297,35.8339744261693,6.11474630088551;0.000500068154494301,35.4886813785119,4.85961857582601;0.000479427020415077,35.9627278694638,6.56098210128482;0.000432278521875872,36.4753679453710,4.76829141062800;0.000486954467730717,35.4942723493773,8.70304678955683;0.000497038751417004,34.6772849786689,8.62651113426275;0.000480657501112544,35.1903228981279,6.03237382471011;0.000616489430871689,34.6608601539399,8.61500335879244;0.000607532134828044,35.4877811672303,9.52869441553977;7.83083961649407e-05,24.2699741417136,0.982224345546324;4.19765639107492e-05,58.7056386555746,3.14276801710401;3.73117976612359e-05,18.6875727809016,1.14183951432678;6.40518143981779e-05,23.0950478718744,0.874552486338910;0.000585584896292449,33.6869052977045,7.16554466483055;0.000192598526049819,42.3789246985333,4.46476069571017;0.000234219279274201,59.6373465385520,3.61094813702535;0.000191721999999552,59.2664935530248,4.22408110945315;0.000308447344365509,36.5980205002228,4.93941357345197;0.000594503797783232,33.5078957546519,4.82607643913228;0.000568090156209295,33.8250228860808,7.72442353971631;0.000480003845874848,34.1162784995336,4.66068753529448;0.000615146442038770,33.5148129667797,9.82731855464668;0.000325300939447898,35.5319209842810,4.42123431422340;0.000349823441953472,35.3269631582823,6.53295202205996;0.000534115088352639,34.2688973659316,9.05054099242549;0.000470953949851433,35.5632734617708,8.13291472305175;0.000526289453717439,35.0982864297263,8.69110755265193;0.000526642049824880,34.5595446725758,6.19243695704490;0.000593814950486003,34.3157265131404,7.27541136060053;0.000547868768032831,34.4947305110576,6.46019449425659;0.000471464118887307,35.4005640145843,9.18598845194275;0.000485178197995611,36.2487054652435,6.29809496988170;0.000560848609673359,35.7487511808604,7.04386543170152;0.000613483584069203,34.8795937964433,5.93262100033124;0.000553098758538584,35.4545967763311,3.83612217525232;0.000570051180278143,37.7280782896333,7.18795124952720;0.000586672409800681,37.2414013446771,6.07824365995262;0.000349224495240059,37.4745564631199,4.98825373946602;0.000337191082775938,37.3458859580347,5.13284551917436;0.000858476812091665,35.9097950031238,1.86611934971773;0.000849843560273986,36.0406392703716,1.71290865569065;0.000729601417571990,36.6233915160848,1.44767695546428;0.000861808740266621,35.2727925032380,1.65737473941396;0.000663294924868244,36.3784993664294,1.47209358873119;0.000689256558646346,36.0206299482221,1.69580233532771;0.000597489331476434,38.6960489423891,2.38698160075887;0.000737131650048867,37.8506493589922,2.38698160075887;0.000723765931834568,38.3708952564672,2.35729404337209;0.000596535946912450,38.6414451259745,2.35272672685104];
% For 200 spectra, no scaling
%Tune_mat = [0.000517118071857515,37.6802133874584,1;0.000626425549444251,37.1597225086442,1;0.000429650746742829,39.9382838302776,1;0.000511064670423705,40.3198290573123,1;0.000617163656656733,39.4215339820000,1;0.000631766385186104,39.7390825494176,1;0.000665582140468960,39.8198198198110,1;0.000647395116089024,40.4976593845597,1;0.000780326036021158,39.8198198197740,1;0.000883890688089003,39.2441506230571,1;0.000904388606328684,39.1683918124102,1;0.000959663860306263,38.7366955697152,1;0.000856484224232439,39.1259116621310,1;0.000855112919487709,39.3850750943131,1;0.000906003862652544,39.4096411104470,1;0.000865096290999167,39.2539964474518,1;0.000863925177794555,39.0297868284665,1;0.000766556511600735,39.2467263969902,1;0.000669912136776008,39.9508462317581,1;0.000649104163649187,39.9993364815495,1;0.000671210909006537,39.8191638411717,1;0.000765589969815309,39.2050714983307,1;0.000531565153376279,41.9052856169729,1;0.000625014264133362,40.4242931520577,1;0.000620239835861621,40.0675656633079,1;0.000487128542488909,40.8502772642111,1;0.000616776700307537,38.9084507041603,1;0.000590919037842646,39.4888592396581,1;0.000671773526726982,39.2805238872790,1;0.000667777895105308,40.3478580311066,1;0.000726793974674968,39.8473883700642,1;0.000648009759489024,40.3610670844896,1;0.000554195520052264,41.2313432835209,1;0.000521054169456407,41.0360298117552,1;0.000510733252989302,40.8748418094564,1;0.000513648926091791,40.7749077490148,1;0.000444950385077106,41.2883552690642,1;0.000380702142713739,42.7466150869743,1;0.000399262321986416,42.9961089488623,1;0.000429390256410944,43.1238640583296,1;0.000500102910937020,41.2254127877594,1;0.000681075953301361,38.7315341976849,1;0.000658557391810197,38.8018056594476,1;0.000492089414178092,40.4506864047729,1;0.000403992740199232,42.0443803898598,1;0.000414433409728925,42.0152091254073,1;0.000476061511090050,41.3857677902261,1;0.000576252519345395,40.6542609972247,1;0.000386632930677466,42.8065233343467,1;0.000349955585286035,43.2485322853130,1;0.000456887021681257,42.0152091254194,1;0.000465279071148233,42.5399431800075,1;0.000372606431603254,41.8749918440564,1;0.000316494513481578,42.4184261034265,1;0.000332025991035388,42.8294573643288,1;0.000402623592441192,41.9089953429662,1;0.000186721320586480,42.4894194124853,1;0.000424490547307981,41.8560606059416,1;0.000575126524453668,40.4541204371390,1;0.000521308175251869,41.0490876652369,1;0.000571378318260375,40.9719245248703,1;0.000504543768808034,42.3136990014939,1;0.000412900986688818,43.7611007243755,1;0.000453819520945521,42.2422415009697,1;0.000479971328770274,39.1607811886602,1;0.000418687721914900,39.5021594149985,1;0.000378709997042651,40.2781427027781,1;0.000369246815951182,40.4755697557292,1;0.000354406594853658,41.1440540822549,1;0.000407743507090134,40.1405309687991,1;0.000410933249670509,40.6996082075708,1;0.000364281565458764,41.6150807617675,1;0.000341167918542959,42.2562141490442,1;0.000224275129649251,41.3028337065227,1;0.000481309399512844,40.1404269327940,1;0.000406463644721708,39.8198198196752,1;0.000362344654415623,39.7482014387565,1;0.000304282653895566,40.8791533982485,1;0.000492326327863749,39.3542426925254,1;0.000458726898677679,39.9449563017223,1;0.000420182054189800,40.4631437585045,1;0.000327979373702812,41.0018552875086,1;0.000382435809996407,39.7430298680425,1;0.000365012391593359,39.2900098999116,1;0.000384415101786232,39.2326038746090,1;0.000398748608491716,39.5226274980601,1;0.000466171403580001,39.7720190007083,1;0.000565740654463174,39.1150442477741,1;0.000202383757027166,40.7563381587036,1;0.000430158684018843,40.3597650193825,1;0.000428657103803912,41.1545623834611,1;0.000397124259423345,42.1656349021263,1;0.000413789098312907,41.7961605383448,1;0.000489688324278422,40.1818181816762,1;0.000444614868800816,40.5710796104002,1;0.000473834519374234,40.4021937842311,1;0.000509987264562761,39.8037774486176,1;0.000543807783129198,38.8862994954818,1;0.000220629242184533,40.3072050310002,1;0.000455538383998102,39.7950553187408,1;0.000454723241702694,39.1036660792429,1;0.000402396019227123,39.5348837208244,1;0.000449938786966175,40.2024709020526,1;0.000313749660324454,42.4184261035831,1;0.000315994142015769,42.4872960715020,1;0.000371204318363192,41.4404524122072,1;0.000431677593509372,42.5542285642495,1;0.000416329729654825,39.0966091615761,1;0.000451132259854257,38.7925022483388,1;0.000435587650885867,39.4642857142255,1;0.000412161253234517,39.3939393939154,1;0.000372846073113812,39.9275888089192,1;0.000293504700071989,41.1360791854873,1;9.28676348429662e-05,40.6998158378806,1;9.90627223146082e-05,48.4995228053034,1;7.80532640715130e-05,64.6198830443627,1;0.000106240732259496,62.6062323012266,1;0.000115205478214516,55.1122194514798,1;0.000508893726409377,38.9052168002600,1;0.000534804012776473,39.0301092025316,1;0.000555183423680351,38.5017421601109,1;0.000539340392484669,39.2016150047301,1;0.000418258941536886,40.6229059682904,1;0.000323087912786571,41.0324566575902,1;0.000352245938490625,40.3741230849895,1;0.000380038703227024,40.1818181817003,1;0.000458784401216096,39.2505636360458,1;5.48839608058669e-05,50.2302047582209,1;0.000106113549890653,57.8534031411534,1;0.000114068121831796,58.8025545648520,1;0.000867387290901197,25.5524082000732,1;0.00172842480914849,43.0722892338282,1;0.00159135878923109,43.7775415479406,1;0.00156276941534294,43.7623762375271,1;0.000237023191572887,39.8416130036649,1;6.77617903900029e-05,46.9221164852441,1;0.000222887340187708,44.0828770893926,1;0.000287256568451154,38.3015597919147,1;0.000256664825635253,38.9770723103646,1;0.000335805873604626,37.8720923012546,1;0.000122648048755582,40.1280065016941,1;0.000307393375286742,38.0749848926876,1;0.000222089991636475,39.4948575547287,1;9.57917379528438e-05,43.6481932597703,1;0.000147273198034672,69.3706231809540,1;9.20633316936824e-05,69.9128181827103,1;0.000126933674869124,49.9999999998566,1;0.000273948051526370,36.9322200433613,1;9.64134207184498e-05,40.3647985769609,1;6.04026835245518e-05,43.5243590940495,1;0.000121830251854400,41.4589339369318,1;0.000168747872497492,40.1421788954276,1;7.18785988110659e-05,42.2726386061368,1;0.000254831886409933,37.3755915910593,1;0.000219598909998686,37.7020718025544,1;2.52583206313208e-05,72.9372937405624,1;1.85773491553365e-05,74.1610738264653,1;1.80844513573198e-05,70.3821656059132,1;9.68310593299048e-05,39.4330418380806,1;0.000226317881523637,36.9930374691124,1;0.000184505052135407,39.1717469906109,1;0.000193715232479677,38.9770723103096,1;0.000196883261668702,38.0861227131379,1;0.000154382935316898,38.7719298234424,1;0.000166813834503285,38.8595427970506,1;0.000133592493678831,38.5689354275725,1;0.000141613503129608,37.6374451709523,1;0.000167529177422324,38.0378657487079,1;0.000174280726314899,38.4811181548325,1;0.000156867394637027,39.7429098977275,1;7.99841719487253e-05,23.9840593861901,1;1.83832473634673e-05,40.0375789188124,1;3.73117976612359e-05,17.5764616697905,1;6.63172161608411e-05,24.0991735083907,1;7.17617876751868e-05,41.2809279643787,1;7.38719888247528e-05,34.0524204067339,1;5.59682136512728e-05,58.0052493609756,1;4.02096853178047e-05,54.8387096775103,1;0.000136766487225659,27.5345272552901,1;0.000243957382437276,36.1286712516870,1;5.42670475920328e-05,43.2665036901587,1;0.000198286346614464,36.2550809133737,1;0.000166787626684115,36.8333333332707,1;0.000137860248561269,37.0805369122065,1;0.000118721733886623,37.1428571427887,1;0.000148968330926626,37.4468774415916,1;0.000135879742327614,39.0801088374868,1;0.000147450622386982,38.7040280207684,1;0.000184413612627906,37.3583127521868,1;7.99918418687408e-05,40.9314217016311,1;0.000186939484119224,37.6176754750377,1;0.000127378328548189,38.9084507041411,1;0.000160584317106549,39.6008311031189,1;0.000176424968219739,39.5076944290319,1;9.96604754519408e-05,40.5542876947312,1;0.000253371081325708,38.2204358875162,1;5.62280716608809e-05,45.2067447831857,1;7.28493011834189e-05,43.1847704110457,1;0.000120858669187943,36.4457498787578,1;0.000118849545384545,36.9208152540431,1];
% For 200 spectra, no scaling, revert to Christo's original code
Tune_mat = [7.30734100895106e-05,38.8424488339167,1;4.49384923671026e-05,35.1840375313843,1;4.19927086913966e-05,38.0977032202005,1;6.70200086557007e-05,39.7274827010514,1;5.82312490662134e-05,37.7715389684425,1;7.28339775955844e-05,38.9021463284218,1;8.40950833918116e-05,39.4711828121281,1;6.59080590118756e-05,38.8383030307970,1;0.000114259043369152,40.1094688183499,1;7.93240509331666e-05,40.0025320802650,1;8.85446444295334e-05,37.6930822295967,1;0.000121265248920483,38.5705116382299,1;8.57495613065456e-05,37.8338585461690,1;8.43782565618156e-05,37.9714750897971,1;0.000906003862652544,39.4096411104470,1;0.000865096290999167,39.2539964474518,1;0.000863925177794555,39.0297868284665,1;0.000766556511600735,39.2467263969902,1;0.000669912136776008,39.9508462317581,1;0.000649104163649187,39.9993364815495,1;0.000671210909006537,39.8191638411717,1;0.000765589969815309,39.2050714983307,1;0.000531565153376279,41.9052856169729,1;0.000625014264133362,40.4242931520577,1;0.000620239835861621,40.0675656633079,1;0.000487128542488909,40.8502772642111,1;0.000616776700307537,38.9084507041603,1;0.000590919037842646,39.4888592396581,1;0.000671773526726982,39.2805238872790,1;0.000667777895105308,40.3478580311066,1;0.000726793974674968,39.8473883700642,1;0.000648009759489024,40.3610670844896,1;0.000554195520052264,41.2313432835209,1;0.000521054169456407,41.0360298117552,1;0.000510733252989302,40.8748418094564,1;0.000513648926091791,40.7749077490148,1;0.000444950385077106,41.2883552690642,1;0.000380702142713739,42.7466150869743,1;0.000399262321986416,42.9961089488623,1;0.000429390256410944,43.1238640583296,1;0.000500102910937020,41.2254127877594,1;0.000681075953301361,38.7315341976849,1;0.000658557391810197,38.8018056594476,1;0.000492089414178092,40.4506864047729,1;0.000403992740199232,42.0443803898598,1;0.000414433409728925,42.0152091254073,1;0.000476061511090050,41.3857677902261,1;0.000576252519345395,40.6542609972247,1;0.000386632930677466,42.8065233343467,1;0.000349955585286035,43.2485322853130,1;0.000456887021681257,42.0152091254194,1;0.000465279071148233,42.5399431800075,1;0.000372606431603254,41.8749918440564,1;0.000316494513481578,42.4184261034265,1;0.000332025991035388,42.8294573643288,1;0.000402623592441192,41.9089953429662,1;0.000186721320586480,42.4894194124853,1;0.000424490547307981,41.8560606059416,1;0.000575126524453668,40.4541204371390,1;0.000521308175251869,41.0490876652369,1;0.000571378318260375,40.9719245248703,1;0.000504543768808034,42.3136990014939,1;0.000412900986688818,43.7611007243755,1;0.000453819520945521,42.2422415009697,1;0.000479971328770274,39.1607811886602,1;0.000418687721914900,39.5021594149985,1;0.000378709997042651,40.2781427027781,1;0.000369246815951182,40.4755697557292,1;0.000354406594853658,41.1440540822549,1;0.000407743507090134,40.1405309687991,1;0.000410933249670509,40.6996082075708,1;0.000364281565458764,41.6150807617675,1;0.000341167918542959,42.2562141490442,1;0.000224275129649251,41.3028337065227,1;0.000481309399512844,40.1404269327940,1;0.000406463644721708,39.8198198196752,1;0.000362344654415623,39.7482014387565,1;0.000304282653895566,40.8791533982485,1;0.000492326327863749,39.3542426925254,1;0.000458726898677679,39.9449563017223,1;0.000420182054189800,40.4631437585045,1;0.000327979373702812,41.0018552875086,1;0.000382435809996407,39.7430298680425,1;0.000365012391593359,39.2900098999116,1;0.000384415101786232,39.2326038746090,1;0.000398748608491716,39.5226274980601,1;0.000466171403580001,39.7720190007083,1;0.000565740654463174,39.1150442477741,1;0.000202383757027166,40.7563381587036,1;0.000430158684018843,40.3597650193825,1;0.000428657103803912,41.1545623834611,1;0.000397124259423345,42.1656349021263,1;0.000413789098312907,41.7961605383448,1;0.000489688324278422,40.1818181816762,1;0.000444614868800816,40.5710796104002,1;0.000473834519374234,40.4021937842311,1;0.000509987264562761,39.8037774486176,1;0.000543807783129198,38.8862994954818,1;0.000220629242184533,40.3072050310002,1;0.000455538383998102,39.7950553187408,1;0.000454723241702694,39.1036660792429,1;0.000402396019227123,39.5348837208244,1;0.000449938786966175,40.2024709020526,1;0.000313749660324454,42.4184261035831,1;0.000315994142015769,42.4872960715020,1;0.000371204318363192,41.4404524122072,1;0.000431677593509372,42.5542285642495,1;0.000416329729654825,39.0966091615761,1;0.000451132259854257,38.7925022483388,1;0.000435587650885867,39.4642857142255,1;0.000412161253234517,39.3939393939154,1;0.000372846073113812,39.9275888089192,1;0.000293504700071989,41.1360791854873,1;9.28676348429662e-05,40.6998158378806,1;9.90627223146082e-05,48.4995228053034,1;7.80532640715130e-05,64.6198830443627,1;0.000106240732259496,62.6062323012266,1;0.000115205478214516,55.1122194514798,1;0.000508893726409377,38.9052168002600,1;0.000534804012776473,39.0301092025316,1;0.000555183423680351,38.5017421601109,1;0.000539340392484669,39.2016150047301,1;0.000418258941536886,40.6229059682904,1;0.000323087912786571,41.0324566575902,1;0.000352245938490625,40.3741230849895,1;0.000380038703227024,40.1818181817003,1;0.000458784401216096,39.2505636360458,1;5.48839608058669e-05,50.2302047582209,1;0.000106113549890653,57.8534031411534,1;0.000114068121831796,58.8025545648520,1;0.000867387290901197,25.5524082000732,1;0.00172842480914849,43.0722892338282,1;0.00159135878923109,43.7775415479406,1;0.00156276941534294,43.7623762375271,1;0.000237023191572887,39.8416130036649,1;6.77617903900029e-05,46.9221164852441,1;0.000222887340187708,44.0828770893926,1;0.000287256568451154,38.3015597919147,1;0.000256664825635253,38.9770723103646,1;0.000335805873604626,37.8720923012546,1;0.000122648048755582,40.1280065016941,1;0.000307393375286742,38.0749848926876,1;0.000222089991636475,39.4948575547287,1;9.57917379528438e-05,43.6481932597703,1;0.000147273198034672,69.3706231809540,1;9.20633316936824e-05,69.9128181827103,1;0.000126933674869124,49.9999999998566,1;0.000273948051526370,36.9322200433613,1;9.64134207184498e-05,40.3647985769609,1;6.04026835245518e-05,43.5243590940495,1;0.000121830251854400,41.4589339369318,1;0.000168747872497492,40.1421788954276,1;7.18785988110659e-05,42.2726386061368,1;0.000254831886409933,37.3755915910593,1;0.000219598909998686,37.7020718025544,1;2.52583206313208e-05,72.9372937405624,1;1.85773491553365e-05,74.1610738264653,1;1.80844513573198e-05,70.3821656059132,1;9.68310593299048e-05,39.4330418380806,1;0.000226317881523637,36.9930374691124,1;0.000184505052135407,39.1717469906109,1;0.000193715232479677,38.9770723103096,1;0.000196883261668702,38.0861227131379,1;0.000154382935316898,38.7719298234424,1;0.000166813834503285,38.8595427970506,1;0.000133592493678831,38.5689354275725,1;0.000141613503129608,37.6374451709523,1;0.000167529177422324,38.0378657487079,1;0.000174280726314899,38.4811181548325,1;0.000156867394637027,39.7429098977275,1;7.99841719487253e-05,23.9840593861901,1;1.83832473634673e-05,40.0375789188124,1;3.73117976612359e-05,17.5764616697905,1;6.63172161608411e-05,24.0991735083907,1;7.17617876751868e-05,41.2809279643787,1;7.38719888247528e-05,34.0524204067339,1;5.59682136512728e-05,58.0052493609756,1;4.02096853178047e-05,54.8387096775103,1;0.000136766487225659,27.5345272552901,1;0.000243957382437276,36.1286712516870,1;5.42670475920328e-05,43.2665036901587,1;0.000198286346614464,36.2550809133737,1;0.000166787626684115,36.8333333332707,1;0.000137860248561269,37.0805369122065,1;0.000118721733886623,37.1428571427887,1;0.000148968330926626,37.4468774415916,1;0.000135879742327614,39.0801088374868,1;0.000147450622386982,38.7040280207684,1;0.000184413612627906,37.3583127521868,1;7.99918418687408e-05,40.9314217016311,1;0.000186939484119224,37.6176754750377,1;0.000127378328548189,38.9084507041411,1;0.000160584317106549,39.6008311031189,1;0.000176424968219739,39.5076944290319,1;9.96604754519408e-05,40.5542876947312,1;0.000253371081325708,38.2204358875162,1;5.62280716608809e-05,45.2067447831857,1;7.28493011834189e-05,43.1847704110457,1;0.000120858669187943,36.4457498787578,1;0.000118849545384545,36.9208152540431,1];


% monitor the progress in RMS fit
RMSProgress = zeros(1,NRounds+1);

% autofit for each spectrum
for teller_spec = 1:Nspec

Stepsizes = [1E-1 5 0]; % initial stepsize for parameters of interest    
    
% initial fit:
pdf = H2O_pdf_HL_EK(x,Tune_mat(teller_spec,1),'exp',273.15-31,0.22,1/Tune_mat(teller_spec,2));
S = Tune_mat(teller_spec,3)*abs(fft(pdf)).^2*(L/(N-1)).^2;

minval = Calc_RMSD(freq(2:800),S(2:800),EK_F(8:end),EK_all(8:end,teller_spec));

%disp(['Progress is 0 %, RMSD = ',num2str(minval)])
for teller1 = 1:NRounds;
    
    RMSProgress(teller1) = minval;
    for tuningvar = 1:size(Tune_mat,2)
        Tune_vectemp = Tune_mat(teller_spec,:);
        RMS123(2) = minval;
        
        % Apply perturbations to the variables, and see whether this
        % improves the fit
        for teller2 = [1 3];
            % temporary Tune_vec with perturbations:
            Tune_vectemp(tuningvar) = Tune_mat(teller_spec,tuningvar)+ (teller2-2)*Stepsizes(tuningvar);
            
            pdf = H2O_pdf_HL_EK(x,Tune_vectemp(1),'exp',273.15-31,0.22,1/Tune_vectemp(2));
            S = Tune_vectemp(3)*abs(fft(pdf)).^2*(L/(N-1)).^2;

            RMS123(teller2) = Calc_RMSD(freq(2:800),S(2:800),EK_F(8:end),EK_all(8:end,teller_spec));
            
        end
        
        % Determine the best fit and change the parameters for next round
        [minval,minpos] = min(RMS123);
        [maxval,maxpos] = max(RMS123);
        if minval==maxval
            minpos = 2;
        end
        if maxpos==2
            %            warning('Gradient non-unique. Danger of getting stuck in local minimum.')
            minpos = 2;
        end
        
        if minpos == 2
            % no new minimum found; stepsize is reduced
            Stepsizes(tuningvar) = (2/3) * Stepsizes(tuningvar);
        else
            % new minimum found; update Tune_vec
            Tune_mat(teller_spec,tuningvar) = Tune_mat(teller_spec,tuningvar) + (minpos-2)*Stepsizes(tuningvar);
        end
        
    end
    
    disp(['Progress is ',num2str(100*teller_spec/Nspec),' %, RMSD = ',num2str(minval)])

    
%     if rem(teller1,2) ==0
%         disp(['Progress is ',num2str(100*(teller1+(2*teller_spec-2))/(NRounds*Nspec)),' %, RMSD = ',num2str(minval)])
%     end

% stop fitting this spectrum if RMSD has reached below a treshold value
   if minval < 0.1
       break
   end
end

end

RMSProgress(teller1+1) = minval;
D0_exp = Tune_mat(:,1);
k0_exp = Tune_mat(:,2);
S0_exp = Tune_mat(:,3);

% initiate matrices for pdf, mean sigma, and S vectors
pdf = zeros(Nspec,length(pdf));
sigma_mean = zeros(Nspec,1);
S = zeros(Nspec,length(S));

% plot fits for each spectrum

for spectrum = 1:Nspec

    % calculate pdf and S for each spectrum
[pdf(spectrum,:),sigma] = H2O_pdf_HL_EK(x,D0_exp(spectrum),'exp',273.15-31,0.22,1/k0_exp(spectrum));
sigma_mean(spectrum) = mean(sigma);
S(spectrum,:) = S0_exp(spectrum)*abs(fft(pdf(spectrum,:))).^2*(L/(N-1)).^2;

% Plot each spectrum with its fit
figure;
loglog(freq(2:800),S(spectrum,2:800),EK_F(8:end),EK_all(8:end,spectrum))
xlabel('Frequency (m^{-1})')
ylabel('Power')
title(['WDC spectrum ' num2str(EK_age(spectrum)) ' BP with exponential fit'])
end
% 
% Plot paramters through time

% delete a few weird indices in transition to brittle ice data gap
bad_in = find(EK_age > 698 & EK_age < 715);
EK_age(bad_in) = [];
D0_exp(bad_in) = [];
k0_exp(bad_in) = [];

figure;
plot(EK_age,D0_exp(1:end-10))
xlabel('Depth')
ylabel('D0')
title('SP 20m windows, 5m step, D0 with constant S0')

%dlmwrite('SP_20mwin_5mstep_expfit_D0.txt',[EK_age', D0_exp(1:end-10)],'delimiter','\t')

figure;
plot(EK_age,k0_exp(1:end-10))
xlabel('Depth')
ylabel('k0')
title('SP 20m windows, 5m step, k0 with constant S0')

figure;
plot(EK_age,S0_exp(1:end-10))
xlabel('Depth')
ylabel('S0')

end

%% Experimental method of deriving sigma distribution
% This is an experimental method of deriving the sigma distribution from the data:

S_invert = EK_all(:,3); S_invert(1:4) = 1; % take first spectrum and make first 4 elements 1
where = find(isnan(S_invert),1,'first');    % turn NaNs into zeros
S_invert(where:end) = 0;

% % remove annual cycle
% S_input = ones(size(TJ_F))+3*exp(-5*(TJ_F-4.1).^2);
% S_invert = S_invert./S_input;

F_invert = [EK_F;100+EK_F(2:end)];      % double the length of the frequency vector
S_invert = sqrt([S_invert;S_invert((end-1):-1:1)]); % flip mirror image of spectrum and take sqrt

% find the response function via Fourier transform:

X = [-500:500]/100;
F  = ifft(S_invert);
F = real(F([(502:1001),(1:501)]));
figure;
plot(X,F)   % plot response function for first data spectrum

% Do linear regression:
clear XX
sigma_vec = [0.25:0.25:40]/100;     % create vector of all sigmas
for i = 1:length(sigma_vec)
    XX(:,i) = 1/sqrt(2*pi)/sigma_vec(i)*exp(-X.^2/(2*sigma_vec(i)^2));    % calculate all those pdfs 
end

XX = [zeros(size(X')),XX,ones(size(X'))];
XX(501,1) = 1;  % create triangular matrix

lb = zeros(1,length(sigma_vec)+2);
ub = 5*ones(1,length(sigma_vec)+2);
Aeq = ones(1,length(sigma_vec)+2);
beq = 100;
b = lsqlin(XX,F,[],[],[],[],lb,ub);
b = b/sum(b);
hold on
plot([0,sigma_vec,0.4],b)

xlabel('\sigma value (m)','fontsize',12)
ylabel('PDF', 'fontsize',12)
xlim([0 0.3])